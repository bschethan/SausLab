<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-08T20:43:11 IST" name="Default suite" finished-at="2023-01-08T20:43:34 IST" duration-ms="22717">
    <groups>
    </groups>
    <test started-at="2023-01-08T20:43:11 IST" name="Default test" finished-at="2023-01-08T20:43:34 IST" duration-ms="22717">
      <class name="sauceTest.SauceTest">
        <test-method is-config="true" signature="logpath()[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:11 IST" name="logpath" finished-at="2023-01-08T20:43:11 IST" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logpath -->
        <test-method is-config="true" signature="testSetup()[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:11 IST" name="testSetup" finished-at="2023-01-08T20:43:17 IST" duration-ms="5217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method signature="loginuser1()[pri:1, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:17 IST" name="loginuser1" finished-at="2023-01-08T20:43:18 IST" duration-ms="1537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginuser1 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:18 IST" name="getResult" finished-at="2023-01-08T20:43:19 IST" duration-ms="820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginuser1 status=SUCCESS method=SauceTest.loginuser1()[pri:1, instance:sauceTest.SauceTest@399f45b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testSetup()[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:19 IST" name="testSetup" finished-at="2023-01-08T20:43:21 IST" duration-ms="2088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method signature="loginuser2()[pri:2, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:21 IST" name="loginuser2" finished-at="2023-01-08T20:43:21 IST" duration-ms="40" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[TC_02 is skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: TC_02 is skipped
at sauceTest.SauceTest.loginuser2(SauceTest.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginuser2 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:21 IST" name="getResult" finished-at="2023-01-08T20:43:22 IST" duration-ms="724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginuser2 status=SKIP method=SauceTest.loginuser2()[pri:2, instance:sauceTest.SauceTest@399f45b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testSetup()[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:22 IST" name="testSetup" finished-at="2023-01-08T20:43:24 IST" duration-ms="2051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method signature="loginuser3()[pri:3, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:24 IST" name="loginuser3" finished-at="2023-01-08T20:43:24 IST" duration-ms="585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginuser3 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:24 IST" name="getResult" finished-at="2023-01-08T20:43:25 IST" duration-ms="742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginuser3 status=SUCCESS method=SauceTest.loginuser3()[pri:3, instance:sauceTest.SauceTest@399f45b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testSetup()[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:25 IST" name="testSetup" finished-at="2023-01-08T20:43:27 IST" duration-ms="2032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method signature="loginuser4()[pri:4, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:27 IST" name="loginuser4" finished-at="2023-01-08T20:43:33 IST" duration-ms="5579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginuser4 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:33 IST" name="getResult" finished-at="2023-01-08T20:43:34 IST" duration-ms="743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginuser4 status=SUCCESS method=SauceTest.loginuser4()[pri:4, instance:sauceTest.SauceTest@399f45b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:sauceTest.SauceTest@399f45b1]" started-at="2023-01-08T20:43:34 IST" name="teardown" finished-at="2023-01-08T20:43:34 IST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- sauceTest.SauceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
